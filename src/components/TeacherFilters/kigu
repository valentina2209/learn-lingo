import React, { useState } from "react";
import { createPortal } from "react-dom";
import { useForm } from "react-hook-form"; // –ü—Ä–∏–ø—É—Å–∫–∞—î–º–æ, —â–æ —Ü–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è handleSubmit —Ç–∞ register
import css from "./AuthModal.module.css";
// –ü—Ä–∏–ø—É—Å–∫–∞—î–º–æ, —â–æ —Ñ—É–Ω–∫—Ü—ñ—ó registerUser —Ç–∞ loginUser –≤–∏–∑–Ω–∞—á–µ–Ω—ñ –¥–µ—Å—å –≤ –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–æ–º—É —Å–∫–æ—É–ø—ñ –∞–±–æ —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω—ñ

const modalRoot = document.getElementById("modal-root"); // –ü—Ä–∏–ø—É—Å–∫–∞—î–º–æ, —â–æ –∫–æ—Ä–µ–Ω–µ–≤–∏–π –µ–ª–µ–º–µ–Ω—Ç –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –≤–∏–∑–Ω–∞—á–µ–Ω–æ

export default function AuthModal({ mode, onClose, registerUser, loginUser }) {
    const { register, handleSubmit, formState: { errors } } = useForm();
    const [showPassword, setShowPassword] = useState(false);

    const handleBackdropClick = (e) => {
        if (e.target === e.currentTarget) {
            onClose();
        }
    };

    const onSubmit = async (data) => {
        try {
            if (mode === "register") {
                // –ù–∞ —Å–∫—Ä—ñ–Ω—à–æ—Ç—ñ 34 —î –ø–æ–ª–µ Name, —è–∫–µ –Ω–µ –±—É–ª–æ —É –≤–∞—à–æ–º—É –ø–æ—á–∞—Ç–∫–æ–≤–æ–º—É –∫–æ–¥—ñ,
                // –∞–ª–µ –ª–æ–≥—ñ–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î –ª–∏—à–µ email —Ç–∞ password, —Ç–æ–º—É –∑–∞–ª–∏—à–∞—î–º–æ —ó—Ö.
                await registerUser(data.email, data.password);
            } else {
                await loginUser(data.email, data.password);
            }
            onClose();
        } catch (error) {
            console.error("Authentication failed: " + error.message);
            // –¢—É—Ç –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—ñ–¥–æ–±—Ä–∞–∑–∏—Ç–∏ –ø–æ–º–∏–ª–∫—É –≤ UI, –∞ –Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ alert
            // –ù–∞–ø—Ä–∏–∫–ª–∞–¥, –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é useState(error.message)
        }
    };

    const isRegister = mode === "register";

    return createPortal(
        <div className={css.backdrop} onClick={handleBackdropClick}>
            <div className={css.modal}>
                <button onClick={onClose} className={css.closeBtn}>
                    √ó
                </button>

                <h2 className={css.title}>
                    {isRegister ? "Registration" : "Log In"}
                </h2>

                <p className={css.description}>
                    {isRegister 
                        ? "Thank you for your interest in our platform! In order to register, we need some information. Please provide us with the following information." 
                        : "Welcome back! Please enter your credentials to access your account and continue your search for an teacher."
                    }
                </p>

                <form onSubmit={handleSubmit(onSubmit)} className={css.form}>
                    {isRegister && (
                        <label className={css.label}>
                            <input
                                placeholder="Name"
                                type="text"
                                {...register("name")}
                                className={css.input}
                            />
                            {errors.name && <p className={css.error}>{errors.name.message}</p>}
                        </label>
                    )}

                    <label className={css.label}>
                        <input
                            placeholder="Email"
                            type="email"
                            {...register("email")}
                            className={css.input}
                        />
                        {errors.email && <p className={css.error}>{errors.email.message}</p>}
                    </label>

                    <label className={css.label}>
                        <div className={css.passwordWrapper}>
                            <input
                                placeholder="Password"
                                type={showPassword ? "text" : "password"}
                                {...register("password")}
                                className={css.input}
                            />
                            <button
                                type="button"
                                onClick={() => setShowPassword(!showPassword)}
                                className={css.togglePasswordBtn}
                            >
                                {showPassword ? 'üëÅÔ∏è' : 'üîí'}
                            </button>
                        </div>
                        {errors.password && (
                            <p className={css.error}>{errors.password.message}</p>
                        )}
                    </label>

                    <button type="submit" className={css.submitBtn}>
                        {isRegister ? "Sign up" : "Log In"}
                    </button>
                </form>
            </div>
        </div>,
        modalRoot
    );
}